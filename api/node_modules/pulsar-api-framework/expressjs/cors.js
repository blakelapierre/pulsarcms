/*
 * FILE
 *  expressjs/cors.js
 *
 * PURPOSE
 *  Implements the Cross-Origin Resource Sharing (CORS) policy for Pulsar. This
 *  policy is configured by options in the Pulsar configuration file.
 *
 * LICENSE
 *  Copyright (C) 2014 Rob Colbert <rob.isConnected@gmail.com>
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to
 *  deal in the Software without restriction, including without limitation the
 *  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 *  sell copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 */

function CORS (app, config) {

  var config = config.cors;

  app.log.info('CORS allow origins:', config.allowOrigins.join());
  app.log.info('CORS allow methods:', config.allowMethods.join());
  app.log.info('CORS allow headers:', config.allowHeaders.join());
  app.log.info('CORS allow credentials:', config.allowCredentials);

  return function CORS (req, res, next) {
    var originIdx;

    // @TODO - compare with request origin and only emit that origin if a match.
    // For now, emit all authorized origins:

    for (originIdx in config.allowOrigins) {
      res.header('Access-Control-Allow-Origin', config.allowOrigins[originIdx]);
    }

    // Collapse and send the allowed methods & headers:
    res.header('Access-Control-Allow-Methods', config.allowMethods.join());
    res.header('Access-Control-Allow-Headers', config.allowHeaders.join());

    // Indicate whether credentials are allowed/supported:
    res.header(
      'Access-Control-Allow-Credentials',
      config.allowCredentials ? 'true' : 'false'
    );

    if ('OPTIONS' != req.method) {
      next();
      return;
    }

    // Intercept the HTTP OPTIONS method and respond immediately with a blank
    // content body.
    res.send(200);

  };
};

module.exports = exports = CORS;
